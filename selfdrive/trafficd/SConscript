Import('env', 'arch', 'cereal', 'messaging', 'common', 'gpucommon', 'visionipc')
lenv = env.Clone()

libs = [cereal, messaging, common, 'OpenCL', 'SNPE', 'symphony-cpu', 'capnp', 'zmq', 'kj', 'yuv', gpucommon, visionipc]


if arch == "aarch64":
  libs += ['gsl', 'CB', 'gnustl_shared']
  lenv['CFLAGS'].append("-DUSE_THNEED")
  lenv['CXXFLAGS'].append("-DUSE_THNEED")
elif arch == "larch64":
  libs += ['gsl', 'CB', 'pthread', 'dl']
  lenv['CFLAGS'].append("-DUSE_THNEED")
  lenv['CXXFLAGS'].append("-DUSE_THNEED")
else:
  libs += ['pthread']

  # tell runners to use onnx
  lenv['CFLAGS'].append("-DUSE_ONNX_MODEL")
  lenv['CXXFLAGS'].append("-DUSE_ONNX_MODEL")

  if arch == "Darwin":
    # fix OpenCL
    del libs[libs.index('OpenCL')]
    lenv['FRAMEWORKS'] = ['OpenCL']

    # no SNPE on Mac
    del libs[libs.index('SNPE')]
    del libs[libs.index('symphony-cpu')]


lenv.Program('_trafficd', [
    "trafficd.cc",
  ], LIBS=libs)

